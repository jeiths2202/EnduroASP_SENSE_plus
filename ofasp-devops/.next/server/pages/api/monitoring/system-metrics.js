"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/monitoring/system-metrics";
exports.ids = ["pages/api/monitoring/system-metrics"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmonitoring%2Fsystem-metrics&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmonitoring%2Fsystem-metrics.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmonitoring%2Fsystem-metrics&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmonitoring%2Fsystem-metrics.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_monitoring_system_metrics_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/monitoring/system-metrics.ts */ \"(api)/./src/pages/api/monitoring/system-metrics.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_monitoring_system_metrics_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_monitoring_system_metrics_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/monitoring/system-metrics\",\n        pathname: \"/api/monitoring/system-metrics\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_monitoring_system_metrics_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm1vbml0b3JpbmclMkZzeXN0ZW0tbWV0cmljcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGbW9uaXRvcmluZyUyRnN5c3RlbS1tZXRyaWNzLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ3lFO0FBQ3pFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3RUFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0VBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Zhc3AtZGV2b3BzLz81Y2M4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL21vbml0b3Jpbmcvc3lzdGVtLW1ldHJpY3MudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9tb25pdG9yaW5nL3N5c3RlbS1tZXRyaWNzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbW9uaXRvcmluZy9zeXN0ZW0tbWV0cmljc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmonitoring%2Fsystem-metrics&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmonitoring%2Fsystem-metrics.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/monitoring/system-metrics.ts":
/*!****************************************************!*\
  !*** ./src/pages/api/monitoring/system-metrics.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// In-memory storage for demo (use database/time-series DB in production)\nconst metricsHistory = [];\nconst MAX_HISTORY = 100;\nasync function handler(req, res) {\n    if (req.method === \"GET\") {\n        return getSystemMetrics(req, res);\n    } else {\n        res.setHeader(\"Allow\", [\n            \"GET\"\n        ]);\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n}\nasync function getSystemMetrics(req, res) {\n    try {\n        const includeHistory = req.query.history === \"true\";\n        const timeRange = req.query.timeRange || \"1h\";\n        // Collect current system metrics\n        const metrics = await collectSystemMetrics();\n        // Store in history\n        const historyEntry = {\n            timestamp: metrics.timestamp,\n            metrics\n        };\n        metricsHistory.unshift(historyEntry);\n        if (metricsHistory.length > MAX_HISTORY) {\n            metricsHistory.pop();\n        }\n        if (includeHistory) {\n            // Filter history based on time range\n            const filteredHistory = filterHistoryByTimeRange(metricsHistory, timeRange);\n            return res.status(200).json({\n                history: filteredHistory\n            });\n        }\n        return res.status(200).json(metrics);\n    } catch (error) {\n        console.error(\"Error collecting system metrics:\", error);\n        return res.status(500).json({\n            error: \"Failed to collect system metrics\"\n        });\n    }\n}\nasync function collectSystemMetrics() {\n    const timestamp = new Date().toISOString();\n    try {\n        // CPU Metrics\n        const cpuMetrics = await getCpuMetrics();\n        // Memory Metrics\n        const memoryMetrics = await getMemoryMetrics();\n        // Disk Metrics\n        const diskMetrics = await getDiskMetrics();\n        // Network Metrics\n        const networkMetrics = await getNetworkMetrics();\n        // Process Metrics\n        const processMetrics = getProcessMetrics();\n        // Application Metrics\n        const applicationMetrics = await getApplicationMetrics();\n        return {\n            timestamp,\n            cpu: cpuMetrics,\n            memory: memoryMetrics,\n            disk: diskMetrics,\n            network: networkMetrics,\n            process: processMetrics,\n            application: applicationMetrics\n        };\n    } catch (error) {\n        console.error(\"Error in collectSystemMetrics:\", error);\n        // Return mock data for demo purposes\n        return getMockMetrics(timestamp);\n    }\n}\nasync function getCpuMetrics() {\n    try {\n        // Get CPU usage (Linux/Unix)\n        const cpuInfo = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execSync)(\"grep 'cpu ' /proc/stat || echo 'cpu 0 0 0 0 0 0 0'\", {\n            encoding: \"utf8\"\n        });\n        const loadAvg = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execSync)(\"uptime | awk -F'load average:' '{print $2}' || echo '0.0, 0.0, 0.0'\", {\n            encoding: \"utf8\"\n        });\n        const cores = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execSync)(\"nproc || echo '4'\", {\n            encoding: \"utf8\"\n        });\n        // Calculate CPU usage percentage\n        const usage = Math.random() * 30 + 10; // Mock data for demo\n        return {\n            usage: Math.round(usage * 100) / 100,\n            loadAverage: loadAvg.trim().split(\",\").map((x)=>parseFloat(x.trim())),\n            cores: parseInt(cores.trim())\n        };\n    } catch (error) {\n        return {\n            usage: Math.random() * 30 + 10,\n            loadAverage: [\n                0.5,\n                0.7,\n                0.9\n            ],\n            cores: 4\n        };\n    }\n}\nasync function getMemoryMetrics() {\n    try {\n        const memInfo = (0,fs__WEBPACK_IMPORTED_MODULE_1__.readFileSync)(\"/proc/meminfo\", \"utf8\");\n        const lines = memInfo.split(\"\\n\");\n        const getMemValue = (key)=>{\n            const line = lines.find((l)=>l.startsWith(key));\n            return line ? parseInt(line.split(/\\s+/)[1]) * 1024 : 0; // Convert KB to bytes\n        };\n        const total = getMemValue(\"MemTotal\");\n        const free = getMemValue(\"MemFree\");\n        const cached = getMemValue(\"Cached\");\n        const used = total - free;\n        return {\n            total,\n            used,\n            free,\n            cached,\n            usage: Math.round(used / total * 100 * 100) / 100\n        };\n    } catch (error) {\n        // Mock data for demo\n        const total = 8 * 1024 * 1024 * 1024; // 8GB\n        const used = total * (0.3 + Math.random() * 0.4); // 30-70% usage\n        const free = total - used;\n        const cached = total * 0.1;\n        return {\n            total,\n            used: Math.round(used),\n            free: Math.round(free),\n            cached: Math.round(cached),\n            usage: Math.round(used / total * 100 * 100) / 100\n        };\n    }\n}\nasync function getDiskMetrics() {\n    try {\n        const diskUsage = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execSync)(\"df -B1 / | tail -1 | awk '{print $2, $3, $4}'\", {\n            encoding: \"utf8\"\n        });\n        const [total, used, free] = diskUsage.trim().split(\" \").map(Number);\n        return {\n            total,\n            used,\n            free,\n            usage: Math.round(used / total * 100 * 100) / 100\n        };\n    } catch (error) {\n        // Mock data for demo\n        const total = 100 * 1024 * 1024 * 1024; // 100GB\n        const used = total * (0.4 + Math.random() * 0.3); // 40-70% usage\n        const free = total - used;\n        return {\n            total,\n            used: Math.round(used),\n            free: Math.round(free),\n            usage: Math.round(used / total * 100 * 100) / 100\n        };\n    }\n}\nasync function getNetworkMetrics() {\n    try {\n        const networkStats = (0,child_process__WEBPACK_IMPORTED_MODULE_0__.execSync)(\"cat /proc/net/dev | grep 'eth0\\\\|ens'\", {\n            encoding: \"utf8\"\n        });\n        // Parse network statistics (simplified for demo)\n        return {\n            bytesReceived: Math.round(Math.random() * 1000000000),\n            bytesSent: Math.round(Math.random() * 1000000000),\n            packetsReceived: Math.round(Math.random() * 1000000),\n            packetsSent: Math.round(Math.random() * 1000000)\n        };\n    } catch (error) {\n        return {\n            bytesReceived: Math.round(Math.random() * 1000000000),\n            bytesSent: Math.round(Math.random() * 1000000000),\n            packetsReceived: Math.round(Math.random() * 1000000),\n            packetsSent: Math.round(Math.random() * 1000000)\n        };\n    }\n}\nfunction getProcessMetrics() {\n    const memoryUsage = process.memoryUsage();\n    return {\n        pid: process.pid,\n        memoryUsage: memoryUsage.heapUsed,\n        cpuUsage: Math.random() * 10 + 2,\n        uptime: process.uptime()\n    };\n}\nasync function getApplicationMetrics() {\n    // Mock application-specific metrics\n    return {\n        activeConnections: Math.round(Math.random() * 100 + 10),\n        requestsPerMinute: Math.round(Math.random() * 1000 + 100),\n        averageResponseTime: Math.round((Math.random() * 200 + 50) * 100) / 100,\n        errorRate: Math.round(Math.random() * 2 * 100) / 100,\n        version: \"1.0.0\"\n    };\n}\nfunction getMockMetrics(timestamp) {\n    return {\n        timestamp,\n        cpu: {\n            usage: Math.round((Math.random() * 30 + 10) * 100) / 100,\n            loadAverage: [\n                Math.round(Math.random() * 2 * 100) / 100,\n                Math.round(Math.random() * 2 * 100) / 100,\n                Math.round(Math.random() * 2 * 100) / 100\n            ],\n            cores: 4\n        },\n        memory: {\n            total: 8589934592,\n            used: Math.round(8589934592 * (0.3 + Math.random() * 0.4)),\n            free: 0,\n            cached: Math.round(8589934592 * 0.1),\n            usage: Math.round((0.3 + Math.random() * 0.4) * 100 * 100) / 100\n        },\n        disk: {\n            total: 107374182400,\n            used: Math.round(107374182400 * (0.4 + Math.random() * 0.3)),\n            free: 0,\n            usage: Math.round((0.4 + Math.random() * 0.3) * 100 * 100) / 100\n        },\n        network: {\n            bytesReceived: Math.round(Math.random() * 1000000000),\n            bytesSent: Math.round(Math.random() * 1000000000),\n            packetsReceived: Math.round(Math.random() * 1000000),\n            packetsSent: Math.round(Math.random() * 1000000)\n        },\n        process: {\n            pid: process.pid,\n            memoryUsage: process.memoryUsage().heapUsed,\n            cpuUsage: Math.round((Math.random() * 10 + 2) * 100) / 100,\n            uptime: process.uptime()\n        },\n        application: {\n            activeConnections: Math.round(Math.random() * 100 + 10),\n            requestsPerMinute: Math.round(Math.random() * 1000 + 100),\n            averageResponseTime: Math.round((Math.random() * 200 + 50) * 100) / 100,\n            errorRate: Math.round(Math.random() * 2 * 100) / 100,\n            version: \"1.0.0\"\n        }\n    };\n}\nfunction filterHistoryByTimeRange(history, timeRange) {\n    const now = new Date();\n    let cutoffTime = new Date();\n    switch(timeRange){\n        case \"1h\":\n            cutoffTime.setHours(now.getHours() - 1);\n            break;\n        case \"6h\":\n            cutoffTime.setHours(now.getHours() - 6);\n            break;\n        case \"24h\":\n            cutoffTime.setHours(now.getHours() - 24);\n            break;\n        case \"7d\":\n            cutoffTime.setDate(now.getDate() - 7);\n            break;\n        default:\n            cutoffTime.setHours(now.getHours() - 1);\n    }\n    return history.filter((entry)=>new Date(entry.timestamp) >= cutoffTime);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/monitoring/system-metrics.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fmonitoring%2Fsystem-metrics&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fmonitoring%2Fsystem-metrics.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();