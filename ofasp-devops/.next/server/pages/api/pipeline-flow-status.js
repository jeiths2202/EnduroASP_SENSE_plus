"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/pipeline-flow-status";
exports.ids = ["pages/api/pipeline-flow-status"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-flow-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-flow-status.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-flow-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-flow-status.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_pipeline_flow_status_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/pipeline-flow-status.ts */ \"(api)/./src/pages/api/pipeline-flow-status.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_pipeline_flow_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_pipeline_flow_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/pipeline-flow-status\",\n        pathname: \"/api/pipeline-flow-status\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_pipeline_flow_status_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnBpcGVsaW5lLWZsb3ctc3RhdHVzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGc3JjJTJGcGFnZXMlMkZhcGklMkZwaXBlbGluZS1mbG93LXN0YXR1cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNvRTtBQUNwRTtBQUNBLGlFQUFlLHdFQUFLLENBQUMsbUVBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG1FQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL29mYXNwLWRldm9wcy8/YmYxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vc3JjL3BhZ2VzL2FwaS9waXBlbGluZS1mbG93LXN0YXR1cy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3BpcGVsaW5lLWZsb3ctc3RhdHVzXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcGlwZWxpbmUtZmxvdy1zdGF0dXNcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-flow-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-flow-status.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/pipeline-flow-status.ts":
/*!***********************************************!*\
  !*** ./src/pages/api/pipeline-flow-status.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _services_pipelineStateManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../services/pipelineStateManager */ \"(api)/./src/services/pipelineStateManager.ts\");\n\n// API endpoint for real-time pipeline flow visualization\nfunction handler(req, res) {\n    if (req.method !== \"GET\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        // Get current pipeline state from state manager\n        const currentPipeline = _services_pipelineStateManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCurrentPipeline();\n        if (!currentPipeline) {\n            // Return idle state if no pipeline is running\n            return res.status(200).json({\n                error: \"No active pipeline\",\n                message: \"No pipeline is currently running\"\n            });\n        }\n        // Transform pipeline state to match frontend expectations\n        const pipelineStatus = {};\n        // Add pipeline metadata\n        const metadata = {\n            pipelineId: currentPipeline.id,\n            status: currentPipeline.status,\n            currentStep: currentPipeline.currentStep,\n            startTime: currentPipeline.startTime,\n            endTime: currentPipeline.endTime,\n            trigger: currentPipeline.trigger\n        };\n        // Convert step states to API format\n        Object.keys(currentPipeline.steps).forEach((stepId)=>{\n            const step = currentPipeline.steps[stepId];\n            pipelineStatus[stepId] = {\n                status: step.status,\n                progress: step.progress || 0,\n                duration: step.duration,\n                details: step.details || `${stepId.replace(\"-\", \" \")} step`,\n                startTime: step.startTime,\n                endTime: step.endTime,\n                error: step.error\n            };\n        });\n        // Add pipeline statistics\n        const statistics = _services_pipelineStateManager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getStatistics();\n        res.status(200).json({\n            ...pipelineStatus,\n            _metadata: metadata,\n            _statistics: statistics,\n            _timestamp: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"[PIPELINE-FLOW-STATUS] Error fetching pipeline state:\", error);\n        res.status(500).json({\n            error: \"Internal server error\",\n            message: \"Failed to fetch pipeline status\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3BpcGVsaW5lLWZsb3ctc3RhdHVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQ3VFO0FBRXZFLHlEQUF5RDtBQUMxQyxTQUFTQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUN2RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssT0FBTztRQUN4QixPQUFPRCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQUVDLE9BQU87UUFBcUI7SUFDNUQ7SUFFQSxJQUFJO1FBQ0YsZ0RBQWdEO1FBQ2hELE1BQU1DLGtCQUFrQlIseUZBQXVDO1FBRS9ELElBQUksQ0FBQ1EsaUJBQWlCO1lBQ3BCLDhDQUE4QztZQUM5QyxPQUFPTCxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUMxQkMsT0FBTztnQkFDUEcsU0FBUztZQUNYO1FBQ0Y7UUFFQSwwREFBMEQ7UUFDMUQsTUFBTUMsaUJBQXNCLENBQUM7UUFFN0Isd0JBQXdCO1FBQ3hCLE1BQU1DLFdBQVc7WUFDZkMsWUFBWUwsZ0JBQWdCTSxFQUFFO1lBQzlCVCxRQUFRRyxnQkFBZ0JILE1BQU07WUFDOUJVLGFBQWFQLGdCQUFnQk8sV0FBVztZQUN4Q0MsV0FBV1IsZ0JBQWdCUSxTQUFTO1lBQ3BDQyxTQUFTVCxnQkFBZ0JTLE9BQU87WUFDaENDLFNBQVNWLGdCQUFnQlUsT0FBTztRQUNsQztRQUVBLG9DQUFvQztRQUNwQ0MsT0FBT0MsSUFBSSxDQUFDWixnQkFBZ0JhLEtBQUssRUFBRUMsT0FBTyxDQUFDQyxDQUFBQTtZQUN6QyxNQUFNQyxPQUFPaEIsZ0JBQWdCYSxLQUFLLENBQUNFLE9BQU87WUFDMUNaLGNBQWMsQ0FBQ1ksT0FBTyxHQUFHO2dCQUN2QmxCLFFBQVFtQixLQUFLbkIsTUFBTTtnQkFDbkJvQixVQUFVRCxLQUFLQyxRQUFRLElBQUk7Z0JBQzNCQyxVQUFVRixLQUFLRSxRQUFRO2dCQUN2QkMsU0FBU0gsS0FBS0csT0FBTyxJQUFJLENBQUMsRUFBRUosT0FBT0ssT0FBTyxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUM7Z0JBQzNEWixXQUFXUSxLQUFLUixTQUFTO2dCQUN6QkMsU0FBU08sS0FBS1AsT0FBTztnQkFDckJWLE9BQU9pQixLQUFLakIsS0FBSztZQUNuQjtRQUNGO1FBRUEsMEJBQTBCO1FBQzFCLE1BQU1zQixhQUFhN0Isb0ZBQWtDO1FBRXJERyxJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CLEdBQUdLLGNBQWM7WUFDakJvQixXQUFXbkI7WUFDWG9CLGFBQWFIO1lBQ2JJLFlBQVksSUFBSUMsT0FBT0MsV0FBVztRQUNwQztJQUVGLEVBQUUsT0FBTzVCLE9BQU87UUFDZDZCLFFBQVE3QixLQUFLLENBQUMseURBQXlEQTtRQUN2RUosSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUNuQkMsT0FBTztZQUNQRyxTQUFTO1FBQ1g7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Zhc3AtZGV2b3BzLy4vc3JjL3BhZ2VzL2FwaS9waXBlbGluZS1mbG93LXN0YXR1cy50cz9hZTFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IHBpcGVsaW5lU3RhdGVNYW5hZ2VyIGZyb20gJy4uLy4uL3NlcnZpY2VzL3BpcGVsaW5lU3RhdGVNYW5hZ2VyJztcblxuLy8gQVBJIGVuZHBvaW50IGZvciByZWFsLXRpbWUgcGlwZWxpbmUgZmxvdyB2aXN1YWxpemF0aW9uXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gIGlmIChyZXEubWV0aG9kICE9PSAnR0VUJykge1xuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gR2V0IGN1cnJlbnQgcGlwZWxpbmUgc3RhdGUgZnJvbSBzdGF0ZSBtYW5hZ2VyXG4gICAgY29uc3QgY3VycmVudFBpcGVsaW5lID0gcGlwZWxpbmVTdGF0ZU1hbmFnZXIuZ2V0Q3VycmVudFBpcGVsaW5lKCk7XG4gICAgXG4gICAgaWYgKCFjdXJyZW50UGlwZWxpbmUpIHtcbiAgICAgIC8vIFJldHVybiBpZGxlIHN0YXRlIGlmIG5vIHBpcGVsaW5lIGlzIHJ1bm5pbmdcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgIGVycm9yOiAnTm8gYWN0aXZlIHBpcGVsaW5lJyxcbiAgICAgICAgbWVzc2FnZTogJ05vIHBpcGVsaW5lIGlzIGN1cnJlbnRseSBydW5uaW5nJ1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gVHJhbnNmb3JtIHBpcGVsaW5lIHN0YXRlIHRvIG1hdGNoIGZyb250ZW5kIGV4cGVjdGF0aW9uc1xuICAgIGNvbnN0IHBpcGVsaW5lU3RhdHVzOiBhbnkgPSB7fTtcbiAgICBcbiAgICAvLyBBZGQgcGlwZWxpbmUgbWV0YWRhdGFcbiAgICBjb25zdCBtZXRhZGF0YSA9IHtcbiAgICAgIHBpcGVsaW5lSWQ6IGN1cnJlbnRQaXBlbGluZS5pZCxcbiAgICAgIHN0YXR1czogY3VycmVudFBpcGVsaW5lLnN0YXR1cyxcbiAgICAgIGN1cnJlbnRTdGVwOiBjdXJyZW50UGlwZWxpbmUuY3VycmVudFN0ZXAsXG4gICAgICBzdGFydFRpbWU6IGN1cnJlbnRQaXBlbGluZS5zdGFydFRpbWUsXG4gICAgICBlbmRUaW1lOiBjdXJyZW50UGlwZWxpbmUuZW5kVGltZSxcbiAgICAgIHRyaWdnZXI6IGN1cnJlbnRQaXBlbGluZS50cmlnZ2VyXG4gICAgfTtcblxuICAgIC8vIENvbnZlcnQgc3RlcCBzdGF0ZXMgdG8gQVBJIGZvcm1hdFxuICAgIE9iamVjdC5rZXlzKGN1cnJlbnRQaXBlbGluZS5zdGVwcykuZm9yRWFjaChzdGVwSWQgPT4ge1xuICAgICAgY29uc3Qgc3RlcCA9IGN1cnJlbnRQaXBlbGluZS5zdGVwc1tzdGVwSWRdO1xuICAgICAgcGlwZWxpbmVTdGF0dXNbc3RlcElkXSA9IHtcbiAgICAgICAgc3RhdHVzOiBzdGVwLnN0YXR1cyxcbiAgICAgICAgcHJvZ3Jlc3M6IHN0ZXAucHJvZ3Jlc3MgfHwgMCxcbiAgICAgICAgZHVyYXRpb246IHN0ZXAuZHVyYXRpb24sXG4gICAgICAgIGRldGFpbHM6IHN0ZXAuZGV0YWlscyB8fCBgJHtzdGVwSWQucmVwbGFjZSgnLScsICcgJyl9IHN0ZXBgLFxuICAgICAgICBzdGFydFRpbWU6IHN0ZXAuc3RhcnRUaW1lLFxuICAgICAgICBlbmRUaW1lOiBzdGVwLmVuZFRpbWUsXG4gICAgICAgIGVycm9yOiBzdGVwLmVycm9yXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgLy8gQWRkIHBpcGVsaW5lIHN0YXRpc3RpY3NcbiAgICBjb25zdCBzdGF0aXN0aWNzID0gcGlwZWxpbmVTdGF0ZU1hbmFnZXIuZ2V0U3RhdGlzdGljcygpO1xuXG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgLi4ucGlwZWxpbmVTdGF0dXMsXG4gICAgICBfbWV0YWRhdGE6IG1ldGFkYXRhLFxuICAgICAgX3N0YXRpc3RpY3M6IHN0YXRpc3RpY3MsXG4gICAgICBfdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tQSVBFTElORS1GTE9XLVNUQVRVU10gRXJyb3IgZmV0Y2hpbmcgcGlwZWxpbmUgc3RhdGU6JywgZXJyb3IpO1xuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXG4gICAgICBlcnJvcjogJ0ludGVybmFsIHNlcnZlciBlcnJvcicsXG4gICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGZldGNoIHBpcGVsaW5lIHN0YXR1cydcbiAgICB9KTtcbiAgfVxufSJdLCJuYW1lcyI6WyJwaXBlbGluZVN0YXRlTWFuYWdlciIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJjdXJyZW50UGlwZWxpbmUiLCJnZXRDdXJyZW50UGlwZWxpbmUiLCJtZXNzYWdlIiwicGlwZWxpbmVTdGF0dXMiLCJtZXRhZGF0YSIsInBpcGVsaW5lSWQiLCJpZCIsImN1cnJlbnRTdGVwIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsInRyaWdnZXIiLCJPYmplY3QiLCJrZXlzIiwic3RlcHMiLCJmb3JFYWNoIiwic3RlcElkIiwic3RlcCIsInByb2dyZXNzIiwiZHVyYXRpb24iLCJkZXRhaWxzIiwicmVwbGFjZSIsInN0YXRpc3RpY3MiLCJnZXRTdGF0aXN0aWNzIiwiX21ldGFkYXRhIiwiX3N0YXRpc3RpY3MiLCJfdGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/pipeline-flow-status.ts\n");

/***/ }),

/***/ "(api)/./src/services/pipelineStateManager.ts":
/*!**********************************************!*\
  !*** ./src/services/pipelineStateManager.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXTERNAL_NODES: () => (/* binding */ EXTERNAL_NODES),\n/* harmony export */   PIPELINE_STEPS: () => (/* binding */ PIPELINE_STEPS),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Pipeline State Management Service\n// Centralized state management for DevOps CI/CD Pipeline\n// Pipeline step definitions with metadata\nconst PIPELINE_STEPS = [\n    {\n        id: \"commit\",\n        name: \"Code Commit\",\n        type: \"process\",\n        estimatedTime: 2000\n    },\n    {\n        id: \"build-artifact\",\n        name: \"Build Artifact\",\n        type: \"artifact\",\n        estimatedTime: 5000\n    },\n    {\n        id: \"build\",\n        name: \"Build Check\",\n        type: \"process\",\n        estimatedTime: 3000\n    },\n    {\n        id: \"build-decision\",\n        name: \"Build Success?\",\n        type: \"decision\",\n        estimatedTime: 1000\n    },\n    {\n        id: \"test\",\n        name: \"Testing\",\n        type: \"process\",\n        estimatedTime: 8000\n    },\n    {\n        id: \"test-decision\",\n        name: \"Tests Pass?\",\n        type: \"decision\",\n        estimatedTime: 1000\n    },\n    {\n        id: \"security\",\n        name: \"Security Scan\",\n        type: \"process\",\n        estimatedTime: 4000\n    },\n    {\n        id: \"security-decision\",\n        name: \"Security Pass?\",\n        type: \"decision\",\n        estimatedTime: 1000\n    },\n    {\n        id: \"deploy\",\n        name: \"Deploy\",\n        type: \"process\",\n        estimatedTime: 6000\n    },\n    {\n        id: \"deploy-decision\",\n        name: \"Deploy Success?\",\n        type: \"decision\",\n        estimatedTime: 1000\n    },\n    {\n        id: \"production\",\n        name: \"Production Ready\",\n        type: \"process\",\n        estimatedTime: 2000\n    }\n];\n// External system nodes\nconst EXTERNAL_NODES = [\n    {\n        id: \"devops-docs\",\n        name: \"DevOps Docs\",\n        details: \"DevOps documentation and policies\"\n    },\n    {\n        id: \"ci-cd-tools\",\n        name: \"CI/CD Tools\",\n        details: \"Jenkins, GitHub Actions, GitLab CI\"\n    },\n    {\n        id: \"infrastructure\",\n        name: \"Infrastructure\",\n        details: \"AWS, Kubernetes, Docker\"\n    },\n    {\n        id: \"monitoring\",\n        name: \"Monitoring\",\n        details: \"Prometheus, Grafana, ELK Stack\"\n    }\n];\nclass PipelineStateManager {\n    // Get current pipeline state\n    getCurrentPipeline() {\n        return this.currentPipeline;\n    }\n    // Get pipeline history\n    getPipelineHistory(limit = 10) {\n        return this.pipelineHistory.slice(0, Math.min(limit, this.maxHistorySize));\n    }\n    // Create new pipeline execution\n    createPipeline(trigger) {\n        const pipelineId = `pipeline-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        const newPipeline = {\n            id: pipelineId,\n            status: \"running\",\n            currentStep: null,\n            steps: {},\n            trigger,\n            startTime: new Date().toISOString()\n        };\n        // Initialize all steps as idle\n        PIPELINE_STEPS.forEach((step)=>{\n            newPipeline.steps[step.id] = {\n                status: \"idle\",\n                progress: 0\n            };\n        });\n        // Initialize external nodes\n        EXTERNAL_NODES.forEach((node)=>{\n            newPipeline.steps[node.id] = {\n                status: \"idle\",\n                details: node.details\n            };\n        });\n        // Archive current pipeline if exists\n        if (this.currentPipeline) {\n            this.pipelineHistory.unshift(this.currentPipeline);\n            if (this.pipelineHistory.length > this.maxHistorySize) {\n                this.pipelineHistory.pop();\n            }\n        }\n        this.currentPipeline = newPipeline;\n        console.log(`[PIPELINE-STATE] Created new pipeline: ${pipelineId}`);\n        return newPipeline;\n    }\n    // Update step state\n    updateStepState(stepId, update) {\n        if (!this.currentPipeline) {\n            console.error(\"[PIPELINE-STATE] No current pipeline to update\");\n            return;\n        }\n        const currentStep = this.currentPipeline.steps[stepId];\n        if (!currentStep) {\n            console.error(`[PIPELINE-STATE] Step not found: ${stepId}`);\n            return;\n        }\n        this.currentPipeline.steps[stepId] = {\n            ...currentStep,\n            ...update\n        };\n        // Calculate duration if endTime is set\n        if (update.endTime && currentStep.startTime) {\n            const start = new Date(currentStep.startTime).getTime();\n            const end = new Date(update.endTime).getTime();\n            const durationMs = end - start;\n            this.currentPipeline.steps[stepId].duration = this.formatDuration(durationMs);\n        }\n        console.log(`[PIPELINE-STATE] Updated step ${stepId}:`, update);\n    }\n    // Set current step\n    setCurrentStep(stepId) {\n        if (!this.currentPipeline) return;\n        this.currentPipeline.currentStep = stepId;\n        console.log(`[PIPELINE-STATE] Set current step: ${stepId}`);\n    }\n    // Complete pipeline\n    completePipeline(status, error) {\n        if (!this.currentPipeline) return;\n        this.currentPipeline.status = status;\n        this.currentPipeline.currentStep = null;\n        this.currentPipeline.endTime = new Date().toISOString();\n        if (error) {\n            console.error(`[PIPELINE-STATE] Pipeline failed: ${error}`);\n        } else {\n            console.log(`[PIPELINE-STATE] Pipeline completed: ${status}`);\n        }\n    }\n    // Reset pipeline (create idle state)\n    resetPipeline() {\n        const resetPipeline = {\n            id: \"idle-state\",\n            status: \"idle\",\n            currentStep: null,\n            steps: {},\n            trigger: {\n                type: \"manual\"\n            }\n        };\n        // Initialize all steps as idle\n        PIPELINE_STEPS.forEach((step)=>{\n            resetPipeline.steps[step.id] = {\n                status: \"idle\",\n                progress: 0\n            };\n        });\n        // Initialize external nodes\n        EXTERNAL_NODES.forEach((node)=>{\n            resetPipeline.steps[node.id] = {\n                status: \"idle\",\n                details: node.details\n            };\n        });\n        this.currentPipeline = resetPipeline;\n        console.log(\"[PIPELINE-STATE] Pipeline reset to idle state\");\n    }\n    // Get step configuration\n    getStepConfig(stepId) {\n        return PIPELINE_STEPS.find((step)=>step.id === stepId);\n    }\n    // Format duration helper\n    formatDuration(ms) {\n        if (ms < 1000) return `${ms}ms`;\n        if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`;\n        return `${Math.floor(ms / 60000)}m ${Math.floor(ms % 60000 / 1000)}s`;\n    }\n    // Get pipeline statistics\n    getStatistics() {\n        const history = this.pipelineHistory;\n        const total = history.length;\n        const successful = history.filter((p)=>p.status === \"success\").length;\n        const failed = history.filter((p)=>p.status === \"failed\").length;\n        return {\n            total,\n            successful,\n            failed,\n            successRate: total > 0 ? (successful / total * 100).toFixed(1) : \"0\"\n        };\n    }\n    constructor(){\n        this.currentPipeline = null;\n        this.pipelineHistory = [];\n        this.maxHistorySize = 50;\n    }\n}\n// Singleton instance\nconst pipelineStateManager = new PipelineStateManager();\n// Initialize with idle state\npipelineStateManager.resetPipeline();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pipelineStateManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/services/pipelineStateManager.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-flow-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-flow-status.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();