"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/pipeline-status";
exports.ids = ["pages/api/pipeline-status"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-status.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-status.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_pipeline_status_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/pipeline-status.ts */ \"(api)/./src/pages/api/pipeline-status.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_pipeline_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_pipeline_status_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/pipeline-status\",\n        pathname: \"/api/pipeline-status\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_pipeline_status_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnBpcGVsaW5lLXN0YXR1cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGcGlwZWxpbmUtc3RhdHVzLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQytEO0FBQy9EO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw4REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsOERBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2Zhc3AtZGV2b3BzLz8wMWIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9zcmMvcGFnZXMvYXBpL3BpcGVsaW5lLXN0YXR1cy50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3BpcGVsaW5lLXN0YXR1c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3BpcGVsaW5lLXN0YXR1c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-status.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/pipeline-status.ts":
/*!******************************************!*\
  !*** ./src/pages/api/pipeline-status.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Mock data for development/demo purposes\nconst generateMockPipelines = ()=>{\n    const now = new Date();\n    const mockPipelines = [\n        {\n            id: \"mock-1\",\n            name: \"COBOL to Java Conversion Pipeline\",\n            status: \"success\",\n            stage: \"Deploy to Production\",\n            progress: 100,\n            startTime: new Date(now.getTime() - 300000).toISOString(),\n            duration: \"4m 32s\",\n            url: \"https://github.com/openaspax/ofasp-devops/actions/runs/123456\",\n            branch: \"main\",\n            commit: \"abc123\",\n            runNumber: 45\n        },\n        {\n            id: \"mock-2\",\n            name: \"CL to Shell Migration Pipeline\",\n            status: \"running\",\n            stage: \"Security Scanning\",\n            progress: 65,\n            startTime: new Date(now.getTime() - 180000).toISOString(),\n            url: \"https://github.com/openaspax/ofasp-devops/actions/runs/123457\",\n            branch: \"develop\",\n            commit: \"def456\",\n            runNumber: 46\n        },\n        {\n            id: \"mock-3\",\n            name: \"Dataset Conversion Pipeline\",\n            status: \"pending\",\n            stage: \"Queued\",\n            progress: 0,\n            startTime: now.toISOString(),\n            url: \"https://github.com/openaspax/ofasp-devops/actions/runs/123458\",\n            branch: \"feature/dataset-optimization\",\n            commit: \"ghi789\",\n            runNumber: 47\n        }\n    ];\n    return mockPipelines;\n};\n// Fetch real GitHub Actions data\nconst fetchGitHubPipelines = async (owner, repo, token)=>{\n    try {\n        const headers = {\n            \"Accept\": \"application/vnd.github.v3+json\",\n            \"User-Agent\": \"OpenASP-DevOps-Dashboard\"\n        };\n        if (token) {\n            headers[\"Authorization\"] = `Bearer ${token}`;\n        }\n        const response = await fetch(`https://api.github.com/repos/${owner}/${repo}/actions/runs?per_page=10&status=in_progress,completed`, {\n            headers\n        });\n        if (!response.ok) {\n            throw new Error(`GitHub API responded with status: ${response.status}`);\n        }\n        const data = await response.json();\n        const workflows = data.workflow_runs || [];\n        return workflows.map((workflow, index)=>{\n            const startTime = new Date(workflow.created_at);\n            const endTime = workflow.updated_at ? new Date(workflow.updated_at) : new Date();\n            const duration = workflow.conclusion ? Math.floor((endTime.getTime() - startTime.getTime()) / 1000) : null;\n            let status;\n            let progress;\n            let stage;\n            if (workflow.status === \"completed\") {\n                switch(workflow.conclusion){\n                    case \"success\":\n                        status = \"success\";\n                        progress = 100;\n                        stage = \"Completed\";\n                        break;\n                    case \"failure\":\n                        status = \"failed\";\n                        progress = 100;\n                        stage = \"Failed\";\n                        break;\n                    case \"cancelled\":\n                        status = \"cancelled\";\n                        progress = 50;\n                        stage = \"Cancelled\";\n                        break;\n                    default:\n                        status = \"failed\";\n                        progress = 100;\n                        stage = \"Completed\";\n                }\n            } else if (workflow.status === \"in_progress\") {\n                status = \"running\";\n                progress = Math.min(50 + index * 10, 90); // Simulate progress\n                stage = [\n                    \"Quality Gate\",\n                    \"Security Scan\",\n                    \"Build & Test\",\n                    \"Docker Build\",\n                    \"Deploy\"\n                ][index % 5];\n            } else {\n                status = \"pending\";\n                progress = 0;\n                stage = \"Queued\";\n            }\n            return {\n                id: workflow.id.toString(),\n                name: workflow.name,\n                status,\n                stage,\n                progress,\n                startTime: workflow.created_at,\n                duration: duration ? `${Math.floor(duration / 60)}m ${duration % 60}s` : undefined,\n                url: workflow.html_url,\n                branch: workflow.head_branch,\n                commit: workflow.head_sha.substring(0, 7),\n                runNumber: workflow.run_number\n            };\n        });\n    } catch (error) {\n        console.error(\"Failed to fetch GitHub pipelines:\", error);\n        return [];\n    }\n};\nasync function handler(req, res) {\n    if (req.method !== \"GET\") {\n        res.setHeader(\"Allow\", [\n            \"GET\"\n        ]);\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n    try {\n        // Get configuration from environment or query params\n        const owner = process.env.GITHUB_OWNER || req.query.owner || \"openaspax\";\n        const repo = process.env.GITHUB_REPO || req.query.repo || \"ofasp-devops\";\n        const token = process.env.GITHUB_TOKEN;\n        const useMock =  true || 0;\n        let pipelines;\n        if (useMock) {\n            // Use mock data for development/demo\n            pipelines = generateMockPipelines();\n        } else {\n            // Fetch real GitHub Actions data\n            pipelines = await fetchGitHubPipelines(owner, repo, token);\n            // Fallback to mock if no real data\n            if (pipelines.length === 0) {\n                pipelines = generateMockPipelines();\n            }\n        }\n        // Calculate summary statistics\n        const summary = {\n            total: pipelines.length,\n            running: pipelines.filter((p)=>p.status === \"running\").length,\n            success: pipelines.filter((p)=>p.status === \"success\").length,\n            failed: pipelines.filter((p)=>p.status === \"failed\").length,\n            lastUpdate: new Date().toISOString()\n        };\n        res.status(200).json({\n            pipelines,\n            summary\n        });\n    } catch (error) {\n        console.error(\"Pipeline status API error:\", error);\n        res.status(500).json({\n            error: \"Failed to fetch pipeline status\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/pipeline-status.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fpipeline-status&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fpipeline-status.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();